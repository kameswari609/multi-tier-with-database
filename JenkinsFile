pipeline {
    agent any
     tools
     {
         maven 'maven3'
         
     }
     
     environment 
     {
         
         SCANNER_HOME =tool 'sonar-scanner'
     }
    stages {
        stage('git checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/kameswari609/multi-tier-with-database.git'
            }
        }
        
        stage('compile') {
            steps {
                sh "mvn test -DskipTests = True " 
            }
        }
        
        stage('Test') {
            steps {
                git branch: 'main', url: 'https://github.com/kameswari609/multi-tier-with-database.git'
            }
        }
        
        stage('SonarQube Analyisis') {
           steps {
            withSonarQubeEnv('sonar') {
            sh "$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Multitier -Dsonar.project"
        }
               
        }
        }

         stage('Build') {
         steps {
          sh "mvn package -DskipTests=true "

         }        
         }
         
         stage('Publish To Nexus') {
          steps {
             withMaven(globalMavenSettingsConfig: 'settings-maven', jdk: '', maven: 'maven3', mavenSettingsConfig:",traceability:true)
              sh "mvn deploy "
             }
            }
            
       stage('Docker Build Image') {
     steps {
     script {
        withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
        sh "docker build -t aparnamantravadi/bankapp:latest ."

       }

       }

        }
            
        }
        
        stage('Docker Push Image') {
         steps {
         script {
           withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
           sh "docker push aparnamantravadi/bankapp:latest"
           }
            }

            }
            }
            
            
            
    

      stage('Deploy To Kubernetes') {
      steps {
      withKubeConfig(caCertificate: "', clusterName: 'devopsshack-cluster', contextName:"",credentialsld: 'k8-token', namespace:
      'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://F731B4F591C557B3E5161DC2C03CD02B.gr7.us-east-1.eks.amazonaws.com')
      sh "kubectl apply -f ds.yml -n webapps"
      sleep 30

       }
      }


     stage('Verify Deployment'){ I
      steps {
         withKubeConfig(caCertificate: "', clusterName: 'devopsshack-cluster', contextName:"",credentialsld: 'k8-token', namespace:
         'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://F731B4F591C557B3E5161DC2C03CD02B.gr7.us-east-1.eks.amazonaws.com')
         sh "kubectl apply -f ds.yml -n webapps"
        sleep 30
       }
       }


}
}

